/*
 * Sticky HTML5 Music Player With Continuous Playback v1.8.1
 *
 * Copyright 2014-2016, LambertGroup
 * 
 */

(function (d) {
    function P(a) { a = document.getElementById(a.audioID); return !(!a.canPlayType || !a.canPlayType("audio/mpeg;").replace(/no/, "")) } function S(a) { var c = navigator.userAgent, h; c.match(/iPad/i) || c.match(/iPhone/i) ? (a.userOS = "iOS", h = c.indexOf("OS ")) : c.match(/Android/i) ? (a.userOS = "Android", h = c.indexOf("Android ")) : a.userOS = "unknown"; a.userOSver = "iOS" === a.userOS && -1 < h ? c.substr(h + 3, 3).replace("_", ".") : "Android" === a.userOS && -1 < h ? c.substr(h + 8, 3) : "unknown" } function I(a, c, h, f, e, Q, k, n, p, g, l, z, u, q) {
        a.totalTime =
        "Infinity"; c.isSliderInitialized && (p.slider("destroy"), c.isSliderInitialized = !1); c.isProgressInitialized && (g.progressbar("destroy"), c.isProgressInitialized = !1); a.is_changeSrc = !0; a.is_buffer_complete = !1; z.width(a.audioPlayerWidth); g.css({ background: c.bufferEmptyColor }); a.curSongText = ""; c.showAuthor && null != a.playlist_arr[a.current_img_no].author && "" != a.playlist_arr[a.current_img_no].author && (a.curSongText += a.playlist_arr[a.current_img_no].author + " - "); c.showTitle && null != a.playlist_arr[a.current_img_no].title &&
        "" != a.playlist_arr[a.current_img_no].title && (a.curSongText += a.playlist_arr[a.current_img_no].title); a.isAuthorTitleInsideScrolling = !1; a.authorTitleInsideWait = 0; u.stop(); u.css({ "margin-left": 0 }); u.html(a.curSongText); a.curSongText ? z.removeClass("cancelDiv") : z.addClass("cancelDiv"); k = document.getElementById(a.audioID); d(h[a.current_img_no]).css({ background: c.playlistRecordBgOnColor, "border-bottom-color": c.playlistRecordBottomBorderOnColor, color: c.playlistRecordTextOnColor }); J(-1, a, c, f, e, Q); h = a.playlist_arr[a.current_img_no].sources_mp3;
        if (-1 != v.indexOf("opera") || -1 != v.indexOf("opr") || -1 != v.indexOf("firefox") || -1 != v.indexOf("mozzila")) h = a.playlist_arr[a.current_img_no].sources_ogg, "" != P(a) && (h = a.playlist_arr[a.current_img_no].sources_mp3); if (-1 != v.indexOf("chrome") || -1 != v.indexOf("msie") || -1 != v.indexOf("safari")) h = a.playlist_arr[a.current_img_no].sources_mp3, -1 != v.indexOf("opr") && (h = a.playlist_arr[a.current_img_no].sources_ogg, "" != P(a) && (h = a.playlist_arr[a.current_img_no].sources_mp3)); -1 != v.indexOf("android") && (h = a.playlist_arr[a.current_img_no].sources_mp3);
        "iOS" === a.userOS && (h = a.playlist_arr[a.current_img_no].sources_mp3); k.src = h; document.getElementById(a.audioID).load(); -1 != v.indexOf("android") || "iOS" === a.userOS && a.is_very_first || !c.autoPlay || (H(), document.getElementById(a.audioID).play(), n.addClass("AudioPause"))
    } function A(a) { var c = 10 > Math.floor(a / 60) ? "0" + Math.floor(a / 60) : Math.floor(a / 60); return c + ":" + (10 > Math.floor(a - 60 * c) ? "0" + Math.floor(a - 60 * c) : Math.floor(a - 60 * c)) } function N(a, c, h, f, e, Q, k, n) {
        a.is_changeSrc = !1; a.is_very_first && (a.is_very_first =
        !1); e.width(a.audioPlayerWidth); f.width(a.audioPlayerWidth); f.slider({ value: 0, step: .01, orientation: "horizontal", range: "min", max: a.totalTime, slide: function () { a.is_seeking = !0 }, stop: function (c, e) { a.is_seeking = !1; document.getElementById(a.audioID).currentTime = e.value; 0 != document.getElementById(a.audioID).paused && (document.getElementById(a.audioID).play(), k.addClass("AudioPause")) }, create: function (a, e) { c.isSliderInitialized = !0 } }); d(".ui-slider-range", f).css({ background: c.seekbarColor }); e.progressbar({
            value: 0,
            complete: function () { a.is_buffer_complete = !0 }, create: function (a, e) { c.isProgressInitialized = !0 }
        }); d(".ui-widget-header", e).css({ background: c.bufferFullColor })
    } function T(a, c, h, f, e, d, k, n, p, g) {
        !a.isAuthorTitleInsideScrolling && 5 <= a.authorTitleInsideWait && g.width() > a.audioPlayerWidth && !a.isMinimized ? (a.isAuthorTitleInsideScrolling = !0, a.authorTitleInsideWait = 0, g.html(a.curSongText + " **** " + a.curSongText + " **** " + a.curSongText + " **** " + a.curSongText + " **** " + a.curSongText + " **** "), g.css({ "margin-left": 0 }),
        g.stop().animate({ "margin-left": a.audioPlayerWidth - g.width() + "px" }, parseInt(1E4 * (g.width() - a.audioPlayerWidth) / 150, 10), "linear", function () { a.isAuthorTitleInsideScrolling = !1 })) : !a.isAuthorTitleInsideScrolling && g.width() > a.audioPlayerWidth && a.authorTitleInsideWait++; curTime = document.getElementById(a.audioID).currentTime; bufferedTime = 0; a.is_changeSrc && !isNaN(a.totalTime) && "Infinity" != a.totalTime && (N(a, c, h, f, e, d, k, n), -1 != v.indexOf("android") && (c.autoPlay ? (document.getElementById(a.audioID).play(), k.addClass("AudioPause")) :
        k.removeClass("AudioPause"))); !a.is_seeking && c.isSliderInitialized && f.slider("value", curTime); -1 != v.indexOf("android") ? (a.totalTime != document.getElementById(a.audioID).duration && 0 < document.getElementById(a.audioID).duration && (a.totalTime = document.getElementById(a.audioID).duration, c.isSliderInitialized && (f.slider("destroy"), c.isSliderInitialized = !1), c.isProgressInitialized && (e.progressbar("destroy"), c.isProgressInitialized = !1), N(a, c, h, f, e, d, k, n)), e.css({ background: c.bufferFullColor }), isNaN(a.totalTime) ||
        "Infinity" == a.totalTime ? d.text("00:00 / " + A(0)) : d.text(A(curTime) + " / " + A(a.totalTime))) : (document.getElementById(a.audioID).buffered.length && (bufferedTime = document.getElementById(a.audioID).buffered.end(document.getElementById(a.audioID).buffered.length - 1), 0 < bufferedTime && !a.is_buffer_complete && !isNaN(a.totalTime) && "Infinity" != a.totalTime && c.isProgressInitialized && e.progressbar({ value: 100 * bufferedTime / a.totalTime })), d.text(A(curTime) + " / " + A(bufferedTime))); l(c, "cookie_timePlayed", curTime)
    } function J(a,
    c, h, f, e, d) {
        var k = (f.height() + 1) * (c.total_images - h.numberOfThumbsPerScreen); d.stop(!0, !0); -1 == a || c.isCarouselScrolling ? !c.isCarouselScrolling && c.total_images > h.numberOfThumbsPerScreen && (c.isCarouselScrolling = !0, a = -1 * parseInt((f.height() + 1) * c.current_img_no, 10), Math.abs(a) > k && (a = -1 * k), c.total_images > h.numberOfThumbsPerScreen && h.showPlaylist && e.slider("value", 100 + parseInt(100 * a / k)), d.animate({ top: a + "px" }, 500, "easeOutCubic", function () { c.isCarouselScrolling = !1 })) : (c.isCarouselScrolling = !0, 1 >= a && (a = 0),
        a = 2 >= a ? -1 * k : parseInt(k * (a - 100) / 100, 10), 0 < a && (a = 0), d.animate({ top: a + "px" }, 1100, "easeOutQuad", function () { c.isCarouselScrolling = !1 }))
    } function K(a, c, h, f, e, d, k, n, p, g, l, z, u, q, w, r, B, E, x, t, F, C, y, m, G, b, D, U, V, W, H, A, I, J, K, L) {
        r.css({ background: C.playerBg, padding: y + "px" }); "iOS" === a.userOS && a.isMinimized && r.css({ "padding-top": "0px" }); a.audioPlayerWidth = 0; a.isMinimized ? (f.css({ "margin-top": "0px", "margin-bottom": "0px", "margin-left": "0px" }), n.css({ "margin-top": parseInt((f.height() - n.height()) / 2, 10) + "px", "margin-bottom": "0px" }),
        p.css({ "margin-top": parseInt((f.height() - p.height()) / 2, 10) + "px", "margin-bottom": "0px", "margin-right": "0px" })) : (f.css({ "margin-top": a.origPlayButMarginTop, "margin-bottom": a.origPlayButMarginBottom, "margin-left": a.origPlayButMarginLeft }), n.css({ "margin-top": a.origVolumeButMarginTop, "margin-bottom": a.origVolumeButMarginBottom }), p.css({ "margin-top": a.origVolumeSliderMarginTop, "margin-bottom": a.origVolumeSliderMarginBottom, "margin-right": a.origVolumeSliderMarginRight })); m ? (h.removeClass("cancelDiv"), a.audioPlayerWidth +=
        h.width() + parseInt(h.css("margin-left").substring(0, h.css("margin-left").length - 2)) + parseInt(h.css("margin-right").substring(0, h.css("margin-right").length - 2))) : h.addClass("cancelDiv"); G ? (f.removeClass("cancelDiv"), a.audioPlayerWidth += f.width() + parseInt(f.css("margin-left").substring(0, f.css("margin-left").length - 2)) + parseInt(f.css("margin-right").substring(0, f.css("margin-right").length - 2))) : f.addClass("cancelDiv"); b ? (e.removeClass("cancelDiv"), a.audioPlayerWidth += e.width() + parseInt(e.css("margin-left").substring(0,
        e.css("margin-left").length - 2)) + parseInt(e.css("margin-right").substring(0, e.css("margin-right").length - 2))) : e.addClass("cancelDiv"); D ? (d.removeClass("cancelDiv"), a.audioPlayerWidth += d.width() + parseInt(d.css("margin-left").substring(0, d.css("margin-left").length - 2)) + parseInt(d.css("margin-right").substring(0, d.css("margin-right").length - 2))) : d.addClass("cancelDiv"); U ? (k.removeClass("cancelDiv"), a.audioPlayerWidth += k.width() + parseInt(k.css("margin-left").substring(0, k.css("margin-left").length - 2)) +
        parseInt(k.css("margin-right").substring(0, k.css("margin-right").length - 2))) : k.addClass("cancelDiv"); V ? (n.removeClass("cancelDiv"), a.audioPlayerWidth += n.width() + parseInt(n.css("margin-left").substring(0, n.css("margin-left").length - 2)) + parseInt(n.css("margin-right").substring(0, n.css("margin-right").length - 2))) : n.addClass("cancelDiv"); W ? (p.removeClass("cancelDiv"), a.audioPlayerWidth += p.width() + parseInt(p.css("margin-left").substring(0, p.css("margin-left").length - 2)) + parseInt(p.css("margin-right").substring(0,
        p.css("margin-right").length - 2))) : p.addClass("cancelDiv"); H ? (g.removeClass("cancelDiv"), a.audioPlayerWidth += g.width() + parseInt(g.css("margin-left").substring(0, g.css("margin-left").length - 2)) + parseInt(g.css("margin-right").substring(0, g.css("margin-right").length - 2))) : g.addClass("cancelDiv"); A ? (l.css({ display: "block" }), z.css({ display: "block" })) : (l.css({ display: "none" }), z.css({ display: "none" })); g.css({ color: C.timerColor }); u.css({ color: C.songAuthorTitleColor }); "iOS" === a.userOS ? 8 > Number(a.userOSver) &&
        (a.audioPlayerWidth -= 9) : a.audioPlayerWidth -= 9; -1 != v.indexOf("android") ? C.playlistTopPos -= 0 : "iOS" === a.userOS && (a.isMinimized ? 8 > Number(a.userOSver) ? q.css("margin-top", "-14px") : q.css("margin-top", "2px") : 8 > Number(a.userOSver) ? (q.css("margin-top", "-16px"), C.playlistTopPos -= 5) : q.css("margin-top", "-2px")); u.width(a.audioPlayerWidth); w.width(a.audioPlayerWidth + 10); 0 < a.audioPlayerHeight ? a.isMinimized ? (r.height(f.height()), a.audioPlayerHeight = r.height() + 2 * y) : (r.height(a.audioOrigPlayerHeight - 2 * y), a.audioPlayerHeight =
        a.audioOrigPlayerHeight) : (a.audioPlayerHeight = r.height() + 2 * y, a.audioOrigPlayerHeight = a.audioPlayerHeight); A ? a.isMinimized || N(a, C, r, z, l, g, f, c) : a.isMinimized || w.height(a.audioPlayerHeight - 4); I || J ? E.css({ display: "block" }) : (a.isMinimized || w.height(a.audioPlayerHeight - 22), E.css({ display: "none" })); K ? B.css({ display: "block" }) : B.css({ display: "none" }); L ? B.removeClass("cancelThumbsHolderWrapper") : B.addClass("cancelThumbsHolderWrapper"); a.total_images > C.numberOfThumbsPerScreen && K ? x.css({ display: "inline" }) : x.css({ display: "none" });
        a.isMinimized ? (t.addClass("AudioOpenBut"), t.css({ right: -t.width() - 1 + "px", "margin-top": "0px" }), "iOS" === a.userOS && t.height(a.origCloseButHeight - 3)) : (t.removeClass("AudioOpenBut"), t.css({ right: a.origCloseButRight, "margin-top": a.origCloseButMarginTop }))
    } function l(a, c, d, f) { a.continuouslyPlayOnAllPages && (a = new Date, a.setDate(a.getDate() + f), d = escape(d) + (null == f ? "" : "; expires=" + a.toUTCString()) + ";path=/", document.cookie = c + "=" + d) } function G(a, c) {
        if (a.continuouslyPlayOnAllPages) {
            var d, f, e, l = document.cookie.split(";");
            for (d = 0; d < l.length; d++) if (f = l[d].substr(0, l[d].indexOf("=")), e = l[d].substr(l[d].indexOf("=") + 1), f = f.replace(/^\s+|\s+$/g, ""), f == c) return unescape(e)
        }
    } function L(a, c) { var d = Math.ceil(Math.random() * (c.total_images - 1)); c.current_img_no = d != c.current_img_no ? d : Math.ceil(Math.random() * (c.total_images - 1)) } function R(a, c, d, f, e) {
        f = e.width() + 1; c.isMinimized || (f = 0); c.playerNewLeft = "0px"; c.playerMarginLeft = 0; switch (a.playerPossition) {
            case "left": c.playerNewLeft = a.playerAdditionalLeftMargin + "px"; break; case "center": c.playerNewLeft =
            "50%"; c.playerMarginLeft = -1 * (d.width() + f) / 2 + a.playerAdditionalLeftMargin; break; case "right": c.playerNewLeft = "100%"; c.playerMarginLeft = -1 * d.width() - f - a.playerAdditionalLeftMargin; break; default: c.playerNewLeft = 0, c.playerMarginLeft = a.playerAdditionalLeftMargin
        }
    } function X() { var a = -1; "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (a = parseFloat(RegExp.$1)); return parseInt(a, 10) } function H() {
        d("audio").each(function () {
            d(".AudioPlay").removeClass("AudioPause");
            d(this)[0].pause()
        })
    } var v = navigator.userAgent.toLowerCase(); d.fn.audio3_html5 = function (a) {
        a = d.extend({}, d.fn.audio3_html5.defaults, a); return this.each(function () {
            var c = d(this), h = d('<div class="AudioControls"> <a class="AudioRewind" title="Rewind"></a><a class="AudioPrev" title="Previous"></a><a class="AudioPlay" title="Play/Pause"></a><a class="AudioNext" title="Next"></a><a class="AudioShuffle" title="Shuffle"></a><a class="VolumeButton" title="Mute/Unmute"></a><div class="VolumeSlider"></div> <div class="AudioTimer">00:00 / 00:00</div>  </div>   <div class="AudioBuffer"></div><div class="AudioSeek"></div><div class="songAuthorTitle"><div class="songAuthorTitleInside">AA</div></div>    <div class="thumbsHolderWrapper"><div class="playlistPadding"><div class="thumbsHolderVisibleWrapper"><div class="thumbsHolder"></div></div></div></div>  <div class="slider-vertical"></div>'),
            f = d('<div class="AudioCloseBut"></div>'), e = c.parent(".audio3_html5"), A = d(this).parent(), k = e.parent(".audio3_html5_bottom_div"); k.append(f); k.addClass(a.skin); e.addClass(a.skin); e.append(h); var n = d(".AudioControls", e), p = d(".AudioRewind", e), g = d(".AudioPlay", e), M = d(".AudioPrev", e), z = d(".AudioNext", e), u = d(".AudioShuffle", e), q = d(".VolumeButton", e), w = d(".VolumeSlider", e), r = d(".AudioTimer", e), B = d(".songAuthorTitle", e), E = d(".songAuthorTitleInside", e), x = d(".AudioBuffer", e), t = d(".AudioSeek", e), F = d(".thumbsHolderWrapper",
            e), h = d(".playlistPadding", e), C = d(".thumbsHolderVisibleWrapper", e), y = d(".thumbsHolder", e), m = d(".slider-vertical", e), O = X(), b = {
                current_img_no: 0, is_very_first: !0, total_images: 0, is_seeking: !1, is_changeSrc: !1, is_buffer_complete: !1, timeupdateInterval: "", totalTime: "", playlist_arr: "", isCarouselScrolling: !1, isAuthorTitleInsideScrolling: !1, curSongText: "", authorTitleInsideWait: 0, audioPlayerWidth: 0, audioPlayerHeight: 0, audioOrigPlayerHeight: 0, audioID: "", audioObj: "", cookie_timePlayed: 0, cookie_current_img_no: 0, cookie_initialVolume: 0,
                cookie_muteVolume: 0, cookie_autoPlay: !1, cookie_shuffle: !1, isMinimized: !1, playerNewLeft: 0, playerMarginLeft: 0, closeTime: 10, origPlayButMarginTop: 0, origPlayButMarginBottom: 0, origPlayButMarginLeft: 0, origPlayButMarginRight: 0, origVolumeButMarginTop: 0, origVolumeButMarginBottom: 0, origVolumeButMarginLeft: 0, origVolumeButMarginRight: 0, origVolumeSliderMarginTop: 0, origVolumeSliderMarginBottom: 0, origVolumeSliderMarginLeft: 0, origVolumeSliderMarginRight: 0, origCloseButMarginTop: 0, origCloseButRight: 0, origCloseButHeight: 0,
                userOS: "", userOSver: 0
            }; b.audioID = c.attr("id"); b.origPlayButMarginTop = g.css("margin-top"); b.origPlayButMarginBottom = g.css("margin-bottom"); b.origPlayButMarginLeft = g.css("margin-left"); b.origPlayButMarginRight = g.css("margin-right"); b.origVolumeButMarginTop = q.css("margin-top"); b.origVolumeButMarginBottom = q.css("margin-bottom"); b.origVolumeButMarginLeft = q.css("margin-left"); b.origVolumeButMarginRight = q.css("margin-right"); b.origVolumeSliderMarginTop = w.css("margin-top"); b.origVolumeSliderMarginBottom =
            w.css("margin-bottom"); b.origVolumeSliderMarginLeft = w.css("margin-left"); b.origVolumeSliderMarginRight = w.css("margin-right"); b.origCloseButMarginTop = f.css("margin-top"); b.origCloseButRight = f.css("right"); f.addClass("AudioOpenBut"); b.origCloseButHeight = f.height(); f.removeClass("AudioOpenBut"); f.css({ "background-color": a.playerBg }); S(b); K(b, c, p, g, M, z, u, q, w, r, x, t, B, n, A, e, F, E, m, f, O, a, a.playerPadding, a.showRewindBut, a.showPlayBut, a.showPreviousBut, a.showNextBut, a.showShuffleBut, a.showVolumeBut, a.showVolumeSliderBut,
            a.showTimer, a.showSeekBar, a.showAuthor, a.showTitle, a.showPlaylist, a.showPlaylistOnInit); F.css({ width: e.width() + 2 * a.playerPadding + "px", top: b.audioPlayerHeight + a.playlistTopPos + "px", left: "0px", background: a.playlistBgColor }); C.width(e.width() + 1 + 2 * a.playerPadding); b.playlist_arr = []; d(".xaudioplaylist", e).children().each(function () {
                currentElement = d(this); b.total_images++; b.playlist_arr[b.total_images - 1] = []; b.playlist_arr[b.total_images - 1].title = ""; b.playlist_arr[b.total_images - 1].author = ""; b.playlist_arr[b.total_images -
                1].thumb = ""; b.playlist_arr[b.total_images - 1].sources_mp3 = ""; b.playlist_arr[b.total_images - 1].sources_ogg = ""; null != currentElement.find(".xtitle").html() && (b.playlist_arr[b.total_images - 1].title = currentElement.find(".xtitle").html()); null != currentElement.find(".xauthor").html() && (b.playlist_arr[b.total_images - 1].author = currentElement.find(".xauthor").html()); null != currentElement.find(".xthumb").html() && (b.playlist_arr[b.total_images - 1].thumb = currentElement.find(".xthumb").html()); null != currentElement.find(".xsources_mp3").html() &&
                (b.playlist_arr[b.total_images - 1].sources_mp3 = currentElement.find(".xsources_mp3").html()); null != currentElement.find(".xsources_ogg").html() && (b.playlist_arr[b.total_images - 1].sources_ogg = currentElement.find(".xsources_ogg").html()); thumbsHolder_Thumb = d('<div class="thumbsHolder_ThumbOFF" rel="' + (b.total_images - 1) + '"><div class="padding">' + (a.showPlaylistNumber ? b.total_images + ". " : "") + b.playlist_arr[b.total_images - 1].title + "</div></div>"); y.append(thumbsHolder_Thumb); thumbsHolder_Thumb.css({
                    top: (thumbsHolder_Thumb.height() +
                    1) * b.total_images + "px", background: a.playlistRecordBgOffColor, "border-bottom-color": a.playlistRecordBottomBorderOffColor, color: a.playlistRecordTextOffColor
                }); 1 === b.total_images && thumbsHolder_Thumb.css({ background: a.playlistRecordBgOnColor, "border-bottom-color": a.playlistRecordBottomBorderOnColor, color: a.playlistRecordTextOnColor })
            }); F.height(2 * a.playlistPadding + (thumbsHolder_Thumb.height() + 1) * (a.numberOfThumbsPerScreen < b.total_images ? a.numberOfThumbsPerScreen : b.total_images)); C.height((thumbsHolder_Thumb.height() +
            1) * (a.numberOfThumbsPerScreen < b.total_images ? a.numberOfThumbsPerScreen : b.total_images)); h.css({ padding: a.playlistPadding + "px" }); b.total_images > a.numberOfThumbsPerScreen && a.showPlaylist ? (m.slider({ orientation: "vertical", range: "min", min: 1, max: 100, step: 1, value: 100, slide: function (c, d) { J(d.value, b, a, thumbsHolder_Thumb, m, y) } }), m.css({
                display: "inline", position: "absolute", height: F.height() - 16 - 2 * a.playlistPadding + "px", left: e.width() + 2 * a.playerPadding - m.width() - a.playlistPadding + "px", top: b.audioPlayerHeight +
                a.playlistTopPos + a.playlistPadding + "px"
            }), a.showPlaylistOnInit || m.css({ opacity: 0, display: "none" }), d(".thumbsHolder_ThumbOFF", e).css({ width: e.width() + 2 * a.playerPadding - m.width() - 3 * a.playlistPadding + "px" })) : d(".thumbsHolder_ThumbOFF", e).css({ width: e.width() + 2 * a.playerPadding - 2 * a.playlistPadding + "px" }); C.mousewheel(function (c, d, e, f) { c.preventDefault(); c = m.slider("value"); if (1 < parseInt(c) && -1 == parseInt(d) || 100 > parseInt(c) && 1 == parseInt(d)) c += d, m.slider("value", c), J(c, b, a, thumbsHolder_Thumb, m, y) }); var D =
            d(".thumbsHolder_ThumbOFF", e); D.css({ background: a.playlistRecordBgOffColor, "border-bottom-color": a.playlistRecordBottomBorderOffColor, color: a.playlistRecordTextOffColor }); D.click(function () {
                if (!b.is_changeSrc) {
                    a.autoPlay = !0; var f = d(this).attr("rel"); D.css({ background: a.playlistRecordBgOffColor, "border-bottom-color": a.playlistRecordBottomBorderOffColor, color: a.playlistRecordTextOffColor }); b.current_img_no = f; l(a, "cookie_current_img_no", b.current_img_no); I(b, a, D, thumbsHolder_Thumb, m, y, e, g, t, x, r, B, E,
                    c)
                }
            }); D.mouseover(function () { d(this).css({ background: a.playlistRecordBgOnColor, "border-bottom-color": a.playlistRecordBottomBorderOnColor, color: a.playlistRecordTextOnColor }) }); D.mouseout(function () { var c = d(this), e = c.attr("rel"); b.current_img_no != e && c.css({ background: a.playlistRecordBgOffColor, "border-bottom-color": a.playlistRecordBottomBorderOffColor, color: a.playlistRecordTextOffColor }) }); R(a, b, k, F, f); k.css({
                bottom: a.playerAdditionalBottomMargin + "px", left: b.playerNewLeft, "margin-left": b.playerMarginLeft +
                "px", height: b.audioPlayerHeight + a.playlistTopPos + F.height() + "px"
            }); f.click(function () {
                var d = 0; b.isMinimized ? (b.isMinimized = !1, K(b, c, p, g, M, z, u, q, w, r, x, t, B, n, A, e, F, E, m, f, O, a, a.playerPadding, a.showRewindBut, a.showPlayBut, a.showPreviousBut, a.showNextBut, a.showShuffleBut, a.showVolumeBut, a.showVolumeSliderBut, a.showTimer, a.showSeekBar, a.showAuthor, a.showTitle, a.showPlaylist, a.showPlaylistOnInit), d = b.audioPlayerHeight + a.playlistTopPos + F.height()) : (b.isMinimized = !0, K(b, c, p, g, M, z, u, q, w, r, x, t, B, n, A, e, F, E, m,
                f, O, a, 3, !1, !0, !1, !1, !1, !0, !0, !1, !1, !1, !1, !1, !1), d = A.height() + 4); R(a, b, k, F, f); k.animate({ height: d + "px", "margin-left": b.playerMarginLeft }, b.closeTime, "easeOutQuint", function () { k.css({ bottom: a.playerAdditionalBottomMargin + "px" }) })
            }); a.startMinified && f.click(); b.closeTime = 450; b.cookie_initialVolume = G(a, "cookie_initialVolume"); b.cookie_initialVolume && (a.initialVolume = b.cookie_initialVolume); w.slider({
                value: a.initialVolume, step: .05, orientation: "horizontal", range: "min", max: 1, animate: !0, slide: function (c,
                d) { document.getElementById(b.audioID).volume = d.value; l(a, "cookie_initialVolume", d.value) }, stop: function (a, b) { }
            }); document.getElementById(b.audioID).volume = a.initialVolume; w.css({ background: a.volumeOffColor }); d(".ui-slider-range", w).css({ background: a.volumeOnColor }); g.click(function () {
                var c = document.getElementById(b.audioID).paused; H(); 0 == c ? (document.getElementById(b.audioID).pause(), g.removeClass("AudioPause"), l(a, "cookie_autoPlay", !1)) : (document.getElementById(b.audioID).play(), g.addClass("AudioPause"),
                l(a, "cookie_autoPlay", !0))
            }); p.click(function () { document.getElementById(b.audioID).currentTime = 0; H(); document.getElementById(b.audioID).play(); g.addClass("AudioPause") }); z.click(function () {
                if (!b.is_changeSrc || b.is_very_first) a.autoPlay = !0, D.css({ background: a.playlistRecordBgOffColor, "border-bottom-color": a.playlistRecordBottomBorderOffColor, color: a.playlistRecordTextOffColor }), a.shuffle ? L(a, b) : b.current_img_no == b.total_images - 1 ? b.current_img_no = 0 : b.current_img_no++, l(a, "cookie_current_img_no", b.current_img_no),
                I(b, a, D, thumbsHolder_Thumb, m, y, e, g, t, x, r, B, E, c)
            }); M.click(function () { if (!b.is_changeSrc || b.is_very_first) a.autoPlay = !0, D.css({ background: a.playlistRecordBgOffColor, "border-bottom-color": a.playlistRecordBottomBorderOffColor, color: a.playlistRecordTextOffColor }), a.shuffle ? L(a, b) : 0 > b.current_img_no - 1 ? b.current_img_no = b.total_images - 1 : b.current_img_no--, l(a, "cookie_current_img_no", b.current_img_no), I(b, a, D, thumbsHolder_Thumb, m, y, e, g, t, x, r, B, E, c) }); u.click(function () {
                a.shuffle ? (u.removeClass("AudioShuffleON"),
                a.shuffle = !1, l(a, "cookie_shuffle", !1)) : (u.addClass("AudioShuffleON"), a.shuffle = !0, l(a, "cookie_shuffle", !0))
            }); q.click(function () { document.getElementById(b.audioID).muted ? (document.getElementById(b.audioID).muted = !1, q.removeClass("VolumeButtonMuted"), l(a, "cookie_muteVolume", 0)) : (document.getElementById(b.audioID).muted = !0, q.addClass("VolumeButtonMuted"), l(a, "cookie_muteVolume", 1)) }); y.swipe({
                swipeStatus: function (c, d, e, f, g, h) {
                    "up" != e && "down" != e || 0 == f || (currentScrollVal = m.slider("value"), currentScrollVal =
                    "up" == e ? currentScrollVal - 1.5 : currentScrollVal + 1.5, m.slider("value", currentScrollVal), J(currentScrollVal, b, a, thumbsHolder_Thumb, m, y))
                }, threshold: 100, maxTimeThreshold: 500, fingers: "all"
            }); document.getElementById(b.audioID).addEventListener("ended", function () { a.loop && z.click() }); b.cookie_timePlayed = G(a, "cookie_timePlayed"); b.cookie_current_img_no = G(a, "cookie_current_img_no"); b.cookie_autoPlay = G(a, "cookie_autoPlay"); b.cookie_shuffle = G(a, "cookie_shuffle"); b.cookie_current_img_no ? b.current_img_no = b.cookie_current_img_no :
            a.shuffle && (L(a, b), u.addClass("AudioShuffleON")); void 0 != b.cookie_autoPlay && (a.autoPlay = "true" == b.cookie_autoPlay ? !0 : !1); void 0 != b.cookie_shuffle && ("true" == b.cookie_shuffle ? (a.shuffle = !0, u.addClass("AudioShuffleON")) : (a.shuffle = !1, u.removeClass("AudioShuffleON"))); I(b, a, D, thumbsHolder_Thumb, m, y, e, g, t, x, r, B, E, c); b.cookie_muteVolume = G(a, "cookie_muteVolume"); 1 <= b.cookie_muteVolume && q.click(); b.timeupdateInterval = setInterval(function () { T(b, a, e, t, x, r, g, c, B, E) }, 300); document.getElementById(b.audioID).addEventListener("durationchange",
            function () { b.is_changeSrc && (b.totalTime = document.getElementById(b.audioID).duration) }); a.autoPlay ? (H(), document.getElementById(b.audioID).play(), g.addClass("AudioPause")) : g.removeClass("AudioPause"); document.getElementById(b.audioID).addEventListener("canplay", function () {
                b.cookie_timePlayed && (document.getElementById(b.audioID).currentTime = b.cookie_timePlayed, b.cookie_timePlayed = null); "iOS" === b.userOS && b.totalTime != document.getElementById(b.audioID).duration && (a.isSliderInitialized && (t.slider("destroy"),
                a.isSliderInitialized = !1), a.isProgressInitialized && (x.progressbar("destroy"), a.isProgressInitialized = !1), b.totalTime = document.getElementById(b.audioID).duration, N(b, a, e, t, x, r, g, c), a.isProgressInitialized && x.progressbar({ value: b.audioPlayerWidth })); -1 == v.indexOf("opera") && (a.autoPlay ? (H(), document.getElementById(b.audioID).play(), g.addClass("AudioPause")) : g.removeClass("AudioPause"))
            })
        })
    }; d.fn.audio3_html5.defaults = {
        skin: "whiteControllers", initialVolume: .5, autoPlay: !1, loop: !0, shuffle: !1, playerPadding: 5,
        playerBg: "#000000", bufferEmptyColor: "#929292", bufferFullColor: "#454545", seekbarColor: "#ffffff", volumeOffColor: "#454545", volumeOnColor: "#ffffff", timerColor: "#ffffff", songAuthorTitleColor: "#fffff", showRewindBut: !1, showPlayBut: !0, showPreviousBut: !0, showNextBut: !0, showShuffleBut: !0, showVolumeBut: !0, showVolumeSliderBut: !0, showTimer: !0, showSeekBar: !0, showAuthor: !0, showTitle: !0, showPlaylist: !0, showPlaylistOnInit: !0, playlistTopPos: 0, playlistBgColor: "#000000", playlistRecordBgOffColor: "#000000", playlistRecordBgOnColor: "#333333",
        playlistRecordBottomBorderOffColor: "#333333", playlistRecordBottomBorderOnColor: "#FFFFFF", playlistRecordTextOffColor: "#777777", playlistRecordTextOnColor: "#FFFFFF", numberOfThumbsPerScreen: 7, playlistPadding: 4, showPlaylistNumber: !0, continuouslyPlayOnAllPages: !0, playerAdditionalBottomMargin: 1, playerAdditionalLeftMargin: 1, playerPossition: "left", startMinified: !0, isSliderInitialized: !1, isProgressInitialized: !1
    }
})(jQuery);